{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf49fbb9202568588ad7a4747a05391bbe63af4a8ee9dc2b2ce0fa5fb05373673",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "619839",
    "logsBloom": "0x
    "blockHash": "0x4b14d4f6c52ce7315467143d51da524e46fbb611cb22c19049a9efe7ccfb052e",
    "transactionHash": "0xf49fbb9202568588ad7a4747a05391bbe63af4a8ee9dc2b2ce0fa5fb05373673",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "619839",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "cadeec8a81db58c8ec9a1dd1fba6d6bf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Using ChainLink VFR\\n// Floating point math in solidity\\npragma solidity 0.8.7;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n\\taddress private immutable i_owner;\\n\\n\\tusing PriceConverter for uint256;\\n\\n\\tuint256 public constant MINIMUM_USD = (50 * 10) ^ 18;\\n\\n\\t// to keep track of the people that sent mkney to the contract\\n\\taddress[] public funders;\\n\\tmapping(address => uint256) private s_addressToAmountFunded;\\n\\n\\tAggregatorV3Interface private s_priceFeed;\\n\\n\\tconstructor(address priceFeedAddress) {\\n\\t\\ti_owner = msg.sender;\\n\\t\\ts_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n\\t}\\n\\n\\tmodifier onlyOwner() {\\n\\t\\t// require(i_owner == msg.sender, \\\"Sender is not owner\\\");\\n\\t\\tif (msg.sender != i_owner) {\\n\\t\\t\\trevert NotOwner();\\n\\t\\t} // another way to reduce gas.\\n\\t\\t_;\\n\\t}\\n\\n\\t// function to allow anyone send ether to the contract without calling the fund function\\n\\treceive() external payable {\\n\\t\\tfund();\\n\\t}\\n\\n\\tfallback() external payable {\\n\\t\\tfund();\\n\\t}\\n\\n\\tfunction fund() public payable {\\n\\t\\t// require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"Didnt send enough ether\\\");\\n\\t\\tfunders.push(msg.sender);\\n\\t\\ts_addressToAmountFunded[msg.sender] = msg.value;\\n\\t}\\n\\n\\tfunction getBalance() public view returns (uint) {\\n\\t\\treturn address(this).balance;\\n\\t}\\n\\n\\tfunction withdraw() public onlyOwner {\\n\\t\\t// looping through all addresses\\n\\t\\tfor (uint funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n\\t\\t\\taddress funder = funders[funderIndex];\\n\\t\\t\\ts_addressToAmountFunded[funder] = 0;\\n\\t\\t}\\n\\n\\t\\t// resetting the array\\n\\t\\tfunders = new address[](0);\\n\\n\\t\\t// withdrawing the funds\\n\\t\\t// payable(msg.sender).transfer(address(this).balance);     // transfer\\n\\n\\t\\t// //send\\n\\t\\t// bool sendSuccess = payable(msg.sender).send(address(this).balance);    // send\\n\\t\\t// require(sendSuccess, \\\"Send failed\\\");\\n\\n\\t\\t//call\\n\\t\\t(bool callSuccess, ) = payable(msg.sender).call{\\n\\t\\t\\tvalue: address(this).balance\\n\\t\\t}(\\\"\\\");\\n\\t\\trequire(callSuccess, \\\"Call failed\\\");\\n\\t}\\n\\n\\tfunction getOwner() public view returns (address) {\\n\\t\\treturn i_owner;\\n\\t}\\n\\n\\tfunction getAddressToAmountFunded(\\n\\t\\taddress fundingAddress\\n\\t) public view returns (uint256) {\\n\\t\\treturn s_addressToAmountFunded[fundingAddress];\\n\\t}\\n\\n\\tfunction getPriceFeed() public view returns (AggregatorV3Interface) {\\n\\t\\treturn s_priceFeed;\\n\\t}\\n}\\n\",\"keccak256\":\"0x373c6e3aaa598705f68ddd6c170dcb7687d0835cfd5f1e794f38ccaab71fdc9c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.7;\\n\\n// import \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\\nlibrary PriceConverter {\\n        // function to get the price of the native token\\n    function getPrice() internal view returns (uint256) {\\n        // ABI \\n        // Goerli ETH/USD address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\n        //price of eth in terms of USD \\n        return uint256(price * 1e10);\\n    }\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        return priceFeed.version();\\n    }\\n\\n    // convert eth price to usd\\n    // function getConversionRate(uint256 ethAmount) internal view returns (uint256) {\\n    //     uint256 ethPrice = getPrice();\\n    //     uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n    //     return ethAmountInUsd;\\n    // }\\n}\",\"keccak256\":\"0x417c1510aa83bdd036105143951741dbf3af7664cef2981315c09458c6afb23a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610b32380380610b32833981810160405281019061003291906100c5565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100bf81610129565b92915050565b6000602082840312156100db576100da610124565b5b60006100e9848285016100b0565b91505092915050565b60006100fd82610104565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610132816100f2565b811461013d57600080fd5b50565b60805160601c6109cd610165600039600081816102db015261052301526109cd6000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101425780639e87a5cd1461016d578063b60d428814610198578063dc0d3dff146101a25761008e565b80630343fb251461009857806312065fe0146100d55780633ccfd60b146101005780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610681565b610288565b6040516100cc91906107b9565b60405180910390f35b3480156100e157600080fd5b506100ea6102d1565b6040516100f791906107b9565b60405180910390f35b34801561010c57600080fd5b506101156102d9565b005b34801561012357600080fd5b5061012c610519565b60405161013991906107b9565b60405180910390f35b34801561014e57600080fd5b5061015761051f565b6040516101649190610763565b60405180910390f35b34801561017957600080fd5b50610182610547565b60405161018f919061077e565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c491906106ae565b610571565b6040516101d69190610763565b60405180910390f35b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600047905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600080549050811015610409576000808281548110610383576103826108da565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040190610862565b915050610361565b50600067ffffffffffffffff81111561042557610424610909565b5b6040519080825280602002602001820160405280156104535781602001602082028036833780820191505090505b50600090805190602001906104699291906105b0565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104909061074e565b60006040518083038185875af1925050503d80600081146104cd576040519150601f19603f3d011682016040523d82523d6000602084013e6104d2565b606091505b5050905080610516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050d90610799565b60405180910390fd5b50565b6101e681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000818154811061058157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054828255906000526020600020908101928215610629579160200282015b828111156106285782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906105d0565b5b509050610636919061063a565b5090565b5b8082111561065357600081600090555060010161063b565b5090565b60008135905061066681610969565b92915050565b60008135905061067b81610980565b92915050565b60006020828403121561069757610696610938565b5b60006106a584828501610657565b91505092915050565b6000602082840312156106c4576106c3610938565b5b60006106d28482850161066c565b91505092915050565b6106e4816107f0565b82525050565b6106f38161082c565b82525050565b6000610706600b836107df565b91506107118261093d565b602082019050919050565b60006107296000836107d4565b915061073482610966565b600082019050919050565b61074881610822565b82525050565b60006107598261071c565b9150819050919050565b600060208201905061077860008301846106db565b92915050565b600060208201905061079360008301846106ea565b92915050565b600060208201905081810360008301526107b2816106f9565b9050919050565b60006020820190506107ce600083018461073f565b92915050565b600081905092915050565b600082825260208201905092915050565b60006107fb82610802565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108378261083e565b9050919050565b600061084982610850565b9050919050565b600061085b82610802565b9050919050565b600061086d82610822565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156108a05761089f6108ab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b610972816107f0565b811461097d57600080fd5b50565b61098981610822565b811461099457600080fd5b5056fea2646970667358221220c4a08f136a11a5c0b6c9b9920538fb326d161f41be6f7c79295279bef9e8a5c264736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101425780639e87a5cd1461016d578063b60d428814610198578063dc0d3dff146101a25761008e565b80630343fb251461009857806312065fe0146100d55780633ccfd60b146101005780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610681565b610288565b6040516100cc91906107b9565b60405180910390f35b3480156100e157600080fd5b506100ea6102d1565b6040516100f791906107b9565b60405180910390f35b34801561010c57600080fd5b506101156102d9565b005b34801561012357600080fd5b5061012c610519565b60405161013991906107b9565b60405180910390f35b34801561014e57600080fd5b5061015761051f565b6040516101649190610763565b60405180910390f35b34801561017957600080fd5b50610182610547565b60405161018f919061077e565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c491906106ae565b610571565b6040516101d69190610763565b60405180910390f35b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600047905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600080549050811015610409576000808281548110610383576103826108da565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040190610862565b915050610361565b50600067ffffffffffffffff81111561042557610424610909565b5b6040519080825280602002602001820160405280156104535781602001602082028036833780820191505090505b50600090805190602001906104699291906105b0565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104909061074e565b60006040518083038185875af1925050503d80600081146104cd576040519150601f19603f3d011682016040523d82523d6000602084013e6104d2565b606091505b5050905080610516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050d90610799565b60405180910390fd5b50565b6101e681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000818154811061058157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054828255906000526020600020908101928215610629579160200282015b828111156106285782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906105d0565b5b509050610636919061063a565b5090565b5b8082111561065357600081600090555060010161063b565b5090565b60008135905061066681610969565b92915050565b60008135905061067b81610980565b92915050565b60006020828403121561069757610696610938565b5b60006106a584828501610657565b91505092915050565b6000602082840312156106c4576106c3610938565b5b60006106d28482850161066c565b91505092915050565b6106e4816107f0565b82525050565b6106f38161082c565b82525050565b6000610706600b836107df565b91506107118261093d565b602082019050919050565b60006107296000836107d4565b915061073482610966565b600082019050919050565b61074881610822565b82525050565b60006107598261071c565b9150819050919050565b600060208201905061077860008301846106db565b92915050565b600060208201905061079360008301846106ea565b92915050565b600060208201905081810360008301526107b2816106f9565b9050919050565b60006020820190506107ce600083018461073f565b92915050565b600081905092915050565b600082825260208201905092915050565b60006107fb82610802565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108378261083e565b9050919050565b600061084982610850565b9050919050565b600061085b82610802565b9050919050565b600061086d82610822565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156108a05761089f6108ab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b610972816107f0565b811461097d57600080fd5b50565b61098981610822565b811461099457600080fd5b5056fea2646970667358221220c4a08f136a11a5c0b6c9b9920538fb326d161f41be6f7c79295279bef9e8a5c264736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 20,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 24,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 27,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)239"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)239": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}